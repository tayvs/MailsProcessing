<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds">

    <property name="logDir" value="C:/Projects/CSV2Mongo/log/" />

    <appender name="PingSTDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="org.emis.tayvs.actors.MDCLogging.LoggingFilter" />
        <encoder>
            <pattern>
                [%-5level] %date{[yyyy-MM-dd HH:mm:ss.SSS]} [%X{akkaSource}] %msg %n
            </pattern>
        </encoder>
    </appender>

    <appender name="ExceptionsFile" class="ch.qos.logback.core.FileAppender">
        <filter class="org.emis.tayvs.actors.MDCLogging.ErrorLoggingFilter" />
        <file>${logDir}exceptions.log</file>
        <encoder>
            <pattern>
                %date{[yyyy-MM-dd HH:mm:ss.SSS]} Exception %msg %n
            </pattern>
        </encoder>
    </appender>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <file>${logDir}ping.log</file>
        <target>System.out</target>
        <encoder>
            <pattern>
                [%-5level] %date{[yyyy-MM-dd HH:mm:ss.SSS]} [%X{akkaSource}] [%logger{0}] %msg in [%thread]%n
            </pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logDir}csv.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logDir}-%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>
                [%-5level] %date{[yyyy-MM-dd HH:mm:ss.SSS]} [%X{akkaSource}] [%logger{0}] %msg in [%thread]%n
            </pattern>
        </encoder>
    </appender>

    <appender name="StrategyLogFile" class="ch.qos.logback.classic.sift.SiftingAppender">
        <!--<filter class="org.emis.tayvs.actors.MDCLogging.MDCStrategyFilter" />-->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator> <!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
                <expression>return mdc.contains("strategy");</expression>
            </evaluator>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>
        <discriminator>
            <key>strategy</key>
            <defaultValue>strategy</defaultValue>
        </discriminator>
        <sift>
            <appender name="FILE-${strategy}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${logDir}${strategy}.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <fileNamePattern>
                        ${logDir}${strategy}-%d{yyyy-MM-dd}.%i.zip
                    </fileNamePattern>
                    <maxFileSize>20MB</maxFileSize>
                    <maxHistory>10</maxHistory>
                    <totalSizeCap>5GB</totalSizeCap>
                </rollingPolicy>
                <encoder>
                    <pattern>
                        [%-5level] %date{[yyyy-MM-dd HH:mm:ss.SSS]} [%X{akkaSource}] %X{strategy} %msg%n
                    </pattern>
                </encoder>
            </appender>
        </sift>
    </appender>


    <logger name="akka" level="DEBUG"/>
    <logger name="akka._" level="DEBUG"/>
    <logger name="reactivemongo" level="INFO"/>
    <logger name="reactivemongo._" level="INFO"/>
    <logger name="KafkaConsumer" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="StrategyLogFile"/>
        <appender-ref ref="PingSTDOUT"/>
        <appender-ref ref="ExceptionsFile"/>
    </root>

</configuration>