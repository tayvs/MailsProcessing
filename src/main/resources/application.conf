homeDir = "dsd"
homeDir = ${?homeDir}
app {

  remoteActorSystem = "akka.tcp://delivery-dispatcher-system@192.99.10.12:16001/user/*"

  badDomain = ["getnada.com",
    "abyssmail.com",
    "semutkecil.com",
    "naturalious.com",
    "vomoto.com",
    "eelmail.com",
    "inboxbear.com",
    "harakirimail.com",
    "eelmail.com"]

  myHOmeDir = ${homeDir}"/myDir"

  mongo {
    host = "172.30.240.131:27017"
    dbName = "csv"

    mailsColl = "mails"
    badMailsColl = "badMails"
  }

}

MDCLogging {

  akka{
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  }
}

kafka_customerActions_consumer {

  akka {
    logLevel = "INFO"
  }

}
kafka_customerActions_producer {

  akka {
    logLevel = "INFO"
  }

}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "remote"
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = off
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }

  remote {
    # If this is "on", Akka will log all inbound messages at DEBUG level,
    # if off then they are not logged
    log-received-messages = on
    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    transport = "akka.remote.netty.NettyRemoteTransport"
    prune-quarantine-marker-after = 2 m
    quarantine-after-silence = 10 d
    outbound-control-queue-size = 6144
    netty.tcp {
      hostname = "10.34.0.66"
      //      hostname="217.77.220.65"
      port = 3001
      port = 3002
      message-frame-size = 30000000b
      send-buffer-size = 30000000b
      receive-buffer-size = 30000000b
      maximum-frame-size = 30000000b
    }
  }
}

# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  parallelism = 100

  # How long to wait for `KafkaProducer.close`
  close-timeout = 60s

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
  }
}

# Properties for akka.kafka.ConsumerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.consumer {
  # Tuning property of scheduled polls.
  poll-interval = 50ms

  # Tuning property of the `KafkaConsumer.poll` parameter.
  # Note that non-zero value means that blocking of the thread that
  # is executing the stage will be blocked.
  poll-timeout = 50ms

  # The stage will be await outstanding offset commit requests before
  # shutting down, but if that takes longer than this timeout it will
  # stop forcefully.
  stop-timeout = 30s

  # How long to wait for `KafkaConsumer.close`
  close-timeout = 20s

  # If offset commit requests are not completed within this timeout
  # the returned Future is completed `CommitTimeoutException`.
  commit-timeout = 15s

  # If commits take longer than this time a warning is logged
  commit-time-warning = 1s

  # If for any reason KafkaConsumer.poll blocks for longer than the configured
  # poll-timeout then forcefully woken up with KafkaConsumer.wakeup
  # The KafkaConsumerActor will throw
  # org.apache.kafka.common.errors.WakeupException which will be ignored
  # until max-wakeups limit gets exceeded.
  wakeup-timeout = 3s

  # After exceeding maxinum wakeups the consumer will stop and the stage will fail.
  max-wakeups = 10

  # If enabled log stack traces before waking up the KafkaConsumer to give
  # some indication why the KafkaConsumer is not honouring the poll-timeout
  wakeup-debug = true

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the KafkaConsumerActor. Some blocking may occur.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
  # can be defined in this configuration section.
  kafka-clients {
    # Disable auto-commit by default
    #    enable.auto.commit = false
    enable.auto.commit = true
  }
}